{"version":3,"sources":["components/UI/AppBar.jsx","components/UI/SimpleDialog.jsx","components/UI/CenterContainer.jsx","components/UI/ErrorBoundary.jsx","components/views/Flickr/SingleFeed.jsx","components/views/Flickr/Carousel.jsx","components/views/Flickr/Flickr.jsx","services/Flickr.js","components/views/Flickr/useFlickr.js","components/views/Flickr/index.js","components/pages/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","color","display","alignItems","justifyContent","inputRoot","inputInput","padding","paddingLeft","transition","transitions","create","Navbar","props","buttons","searchInputValue","onSearchInputChanged","onSearchSubmit","onMenuClick","classes","useTheme","isScreenWidthMd","useMediaQuery","useState","searchOpen","setSearchOpen","openSearch","open","trim","className","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","InputBase","autoFocus","onKeyUp","e","keyCode","onBlur","placeholder","input","value","onChange","inputProps","endAdornment","InputAdornment","defaultProps","DialogTitle","withStyles","margin","closeButton","right","top","grey","children","onClose","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","SimpleDialog","body","closeLabel","handleClose","Dialog","aria-labelledby","id","dividers","gutterBottom","Button","style","flexDirection","height","CenterContainer","rest","ErrorBoundary","state","hasError","this","renderFallback","errorMessage","setState","error","React","Component","media","textEllipsis","textOverflow","overflow","whiteSpace","SingleFeedsView","forwardRef","ref","feed","author","categories","direct_link","flickr_link","published_at","Card","elevation","CardActionArea","window","CardMedia","src","component","onError","target","process","CardContent","Link","href","uri","name","join","CardActions","size","FlickrCarousel","memo","feeds","loading","controlledSwiper","setControlledSwiper","activeSlide","setActiveSlide","slider","useMemo","effect","spaceBetween","slidesPerView","centeredSlides","onSlideChange","swiper","activeIndex","paddingTop","paddingBottom","onSwiper","map","key","SingleFeed","length","bottom","Pagination","count","page","slideTo","siblingCount","CircularProgress","prevProps","nextProps","Flickr","flickr","clearError","refreshFeeds","Carousel","feedsLoading","tags","url","queryString","stringify","axios","get","then","res","data","useFlickr","setFeeds","setTags","setFeedsLoading","setError","useCallback","tagsArgs","a","FlickrService","feedsRes","FlickrView","Alert","severity","Home","tagsInput","setTagsInput","showAbout","setShowAbout","openVisitNotif","setOpenVisitNotif","handleVisitNotifClose","event","reason","useEffect","appbarButtons","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","fontSize","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f513341f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    color: 'inherit',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: '20px',\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst Navbar = (props) => {\n  const {\n    title,\n    buttons,\n    searchInputValue,\n    onSearchInputChanged,\n    onSearchSubmit,\n    onMenuClick,\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const isScreenWidthMd = useMediaQuery(theme.breakpoints.up('md'));\n\n  // search input box open state is decided\n  // by searchInputValue\n  const [searchOpen, setSearchOpen] = useState(!!searchInputValue);\n  const openSearch = (open) => {\n    if (!open) {\n      if (!searchInputValue.trim()) {\n        setSearchOpen(open);\n      }\n    } else {\n      setSearchOpen(open);\n    }\n  };\n\n  const handleSearchKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      onSearchSubmit();\n    }\n    if (e.keyCode === 27) {\n      openSearch(false);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={onMenuClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {(!searchOpen || isScreenWidthMd) && title}\n          </Typography>\n          {searchOpen && (\n            <div className={classes.search}>\n              <InputBase\n                autoFocus\n                onKeyUp={handleSearchKeyUp}\n                onBlur={() => {\n                  openSearch(false);\n                }}\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                value={searchInputValue}\n                onChange={onSearchInputChanged}\n                inputProps={{ 'aria-label': 'search' }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"search\"\n                      className={classes.searchIcon}\n                      onClick={onSearchSubmit}\n                    >\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </div>\n          )}\n\n          {!searchOpen && (\n            <IconButton\n              aria-label=\"search\"\n              className={classes.searchIcon}\n              color=\"inherit\"\n              onClick={() => openSearch(true)}\n            >\n              <SearchIcon />\n            </IconButton>\n          )}\n          {buttons}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nNavbar.defaultProps = {\n  buttons: [],\n  searchInputValue: '',\n  onSearchInputChanged: () => {},\n  onSearchSubmit: () => {},\n  onMenuClick: () => {},\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  buttons: PropTypes.arrayOf(PropTypes.node),\n  searchInputValue: PropTypes.string,\n  onSearchInputChanged: PropTypes.func,\n  onSearchSubmit: PropTypes.func,\n  onMenuClick: PropTypes.func,\n};\n\nexport default Navbar;\n","// a wrapper for material dialog\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst SimpleDialog = (props) => {\n  const { title, body, closeLabel, open, handleClose } = props;\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {title}\n      </DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom>{body}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleClose} color=\"primary\">\n          {closeLabel}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nSimpleDialog.defaultProps = {\n  closeLabel: 'close',\n  handleClose: () => {},\n};\n\nSimpleDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  closeLabel: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func,\n};\n\nexport default SimpleDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n  width: '100%',\n  flexDirection: 'column',\n  height: 'calc( 100% - 64px )',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst CenterContainer = (props) => {\n  const { children, ...rest } = props;\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <div style={style} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nCenterContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default CenterContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, errorMessage: error };\n  }\n\n  // componentDidCatch(error, errorInfo) {\n  //   // You can also log the error to an error reporting service\n  //   // logErrorToMyService(error, errorInfo);\n  // }\n\n  render() {\n    const { renderFallback, children } = this.props;\n    const { hasError, errorMessage } = this.state;\n    if (hasError) {\n      return renderFallback(\n        () => this.setState({ hasError: false }),\n        errorMessage\n      );\n    }\n\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  renderFallback: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErrorBoundary;\n","/* eslint-disable camelcase */\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// import material-ui components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Link from '@material-ui/core/Link';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nconst { REACT_APP_FLICKR_IMAGE_ERROR_FALLBACK } = process.env;\n\nconst useStyles = makeStyles({\n  media: {\n    // limit image height\n    height: 'calc( 100vh - 400px )',\n  },\n  textEllipsis: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n});\n\nconst imageErrorFallback = REACT_APP_FLICKR_IMAGE_ERROR_FALLBACK;\n\nconst SingleFeedsView = forwardRef((props, ref) => {\n  const {\n    title,\n    author,\n    categories,\n    direct_link,\n    flickr_link,\n    published_at,\n  } = props.feed;\n  const classes = useStyles();\n\n  const openInFlickr = () => {\n    window.open(flickr_link, 'blank');\n  };\n\n  const setImageFallback = (eventObj) => {\n    // eslint-disable-next-line no-param-reassign\n    eventObj.target.src = imageErrorFallback;\n  };\n\n  return (\n    <Card ref={ref} variant=\"elevation\" elevation={8}>\n      <CardActionArea onClick={openInFlickr}>\n        <CardMedia\n          className={classes.media}\n          src={direct_link}\n          component=\"img\"\n          title={title}\n          onError={(e) => setImageFallback(e)}\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n            className={classes.textEllipsis}\n            title={title}\n          >\n            {title.trim() === '' ? <i>No title</i> : title}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            className={classes.textEllipsis}\n          >\n            Posted by&nbsp;\n            <Link href={author.uri} target=\"blank\">\n              {author.name}\n            </Link>\n            &nbsp;at\n            {published_at}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            className={classes.textEllipsis}\n            title={categories.join(', ')}\n          >\n            Categories:&nbsp;\n            {categories.join('') ? categories.join(', ') : <i>Uncategorized</i>}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n\n      <CardActions>\n        {/* <Button size=\"small\" color=\"primary\">\n          Share\n        </Button> */}\n        <Button size=\"small\" color=\"primary\" href={flickr_link} target=\"blank\">\n          Open in Flickr&nbsp;\n          <OpenInNewIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n});\n\nSingleFeedsView.propTypes = {\n  feed: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    author: PropTypes.shape({\n      name: PropTypes.string,\n      uri: PropTypes.string,\n    }).isRequired,\n    categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n    direct_link: PropTypes.string.isRequired,\n    flickr_link: PropTypes.string.isRequired,\n    published_at: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default SingleFeedsView;\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\n// import swiper for carousel\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// import material-ui component\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import internal component\nimport CenterContainer from 'components/UI/CenterContainer';\nimport SingleFeed from './SingleFeed';\n\nimport 'swiper/swiper.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    width: '90%',\n    [theme.breakpoints.up('md')]: {\n      width: '50%',\n    },\n  },\n}));\n\nconst compareChanges = (prevProps, nextProps) =>\n  !(\n    prevProps.feeds !== nextProps.feeds ||\n    prevProps.loading !== nextProps.loading ||\n    prevProps.error !== nextProps.error\n  );\n\nconst FlickrCarousel = React.memo((props) => {\n  const { feeds, loading = false, error } = props;\n  if (error) {\n    throw error;\n  }\n  const [controlledSwiper, setControlledSwiper] = useState({});\n  const [activeSlide, setActiveSlide] = useState(1);\n\n  const classes = useStyles();\n\n  const onPaginationChange = (e, page) => {\n    controlledSwiper.slideTo(page - 1);\n  };\n\n  // render slider in memo to avoid\n  // unnecessary re-rendering (pagination update, etc)\n  const slider = useMemo(() => {\n    return (\n      <Swiper\n        effect=\"coverflow\"\n        spaceBetween={30}\n        slidesPerView=\"auto\"\n        centeredSlides\n        onSlideChange={(swiper) => {\n          setActiveSlide(swiper.activeIndex + 1);\n        }}\n        style={{ paddingTop: '20px', paddingBottom: '20px' }}\n        onSwiper={setControlledSwiper}\n      >\n        {feeds.map((feed) => (\n          <SwiperSlide key={feed.id} className={classes.media}>\n            <SingleFeed feed={feed} />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    );\n  }, [feeds, classes.media]);\n\n  if (feeds.length && loading === false) {\n    return (\n      <>\n        {slider}\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n            justifyContent: 'center',\n            position: 'fixed',\n            bottom: '20px',\n          }}\n        >\n          <Pagination\n            count={feeds.length}\n            onChange={onPaginationChange}\n            page={activeSlide}\n            siblingCount={2}\n            size=\"small\"\n          />\n        </div>\n      </>\n    );\n  }\n  return (\n    <CenterContainer>\n      <CircularProgress />\n    </CenterContainer>\n  );\n}, compareChanges);\n\nFlickrCarousel.defaultProps = {\n  feeds: [],\n  error: {},\n  loading: false,\n};\n\nFlickrCarousel.propTypes = {\n  feeds: PropTypes.arrayOf(PropTypes.object.isRequired),\n  loading: PropTypes.bool,\n  error: PropTypes.instanceOf(Error),\n};\n\nexport default FlickrCarousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import material-ui components\nimport Button from '@material-ui/core/Button';\nimport CenterContainer from 'components/UI/CenterContainer';\n\n// import material-ui icons\nimport ErrorIcon from '@material-ui/icons/Error';\n\nimport ErrorBoundary from 'components/UI/ErrorBoundary';\nimport Carousel from './Carousel';\n\nconst Flickr = (props) => {\n  const { flickr } = props;\n  return (\n    <ErrorBoundary\n      renderFallback={(clearError) => {\n        const clearAllError = () => {\n          flickr.clearError();\n          clearError();\n          flickr.refreshFeeds();\n        };\n        return (\n          <CenterContainer>\n            <ErrorIcon color=\"error\" />\n            <p>Failed to load Flicker Feeds</p>\n            <Button variant=\"contained\" color=\"primary\" onClick={clearAllError}>\n              Retry\n            </Button>\n          </CenterContainer>\n        );\n      }}\n    >\n      <Carousel\n        feeds={flickr.feeds}\n        loading={flickr.feedsLoading}\n        error={flickr.error}\n      />\n    </ErrorBoundary>\n  );\n};\n\nFlickr.propTypes = {\n  flickr: PropTypes.shape({\n    clearError: PropTypes.func,\n    refreshFeeds: PropTypes.func,\n    feeds: PropTypes.arrayOf(PropTypes.object.isRequired),\n    feedsLoading: PropTypes.bool,\n    error: PropTypes.instanceOf(Error),\n  }).isRequired,\n};\nexport default Flickr;\n","import axios from 'axios';\nimport queryString from 'query-string';\n\nconst { REACT_APP_FLICKR_PUBLIC_FEED_URL } = process.env;\n\nconst getPublicFeed = (tags) => {\n  const url = `${REACT_APP_FLICKR_PUBLIC_FEED_URL}?${queryString.stringify({\n    tags,\n  })}`;\n\n  return axios.get(url).then((res) => {\n    return res.data.data;\n  });\n};\n\nexport default {\n  getPublicFeed,\n};\n","import { useState, useCallback } from 'react';\nimport FlickrService from 'services/Flickr';\n\nconst useFlickr = () => {\n  const [feeds, setFeeds] = useState([]);\n  const [tags, setTags] = useState('');\n  const [feedsLoading, setFeedsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  // recreate refreshFeeds function only\n  // if tags is changed\n  const refreshFeeds = useCallback(\n    async (tagsArgs) => {\n      setFeedsLoading(true);\n      try {\n        const feedsRes = await FlickrService.getPublicFeed(tagsArgs || tags);\n        setFeeds(feedsRes);\n        setFeedsLoading(false);\n      } catch (err) {\n        // purpose of the set error state below\n        // is to throw an error inside the Flickr\n        // component. so the error handled inside\n        // component instead of here\n        setError(err);\n      }\n    },\n    [tags]\n  );\n\n  return {\n    feeds,\n    tags,\n    setTags,\n    feedsLoading,\n    refreshFeeds,\n    error,\n    clearError,\n  };\n};\n\nexport default useFlickr;\n","import FlickrView from './Flickr';\nimport useFlickr from './useFlickr';\n\nFlickrView.useFlickr = useFlickr;\n\nexport default FlickrView;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// import material-ui components\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// import material-ui icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n// import internal UI components\nimport AppBar from 'components/UI/AppBar';\nimport SimpleDialog from 'components/UI/SimpleDialog';\n\n// import Flickr view and hooks\nimport Flickr from 'components/views/Flickr';\n\nconst { useFlickr } = Flickr;\n\nconst Alert = (props) => {\n  const { children, severity } = props;\n  return (\n    <MuiAlert elevation={6} variant=\"filled\" severity={severity}>\n      {children}\n    </MuiAlert>\n  );\n};\n\nAlert.propTypes = {\n  children: PropTypes.node.isRequired,\n  severity: PropTypes.string.isRequired,\n};\n\nconst Home = () => {\n  const flickr = useFlickr();\n  const { tags, setTags } = flickr;\n  const [tagsInput, setTagsInput] = useState('');\n  const [showAbout, setShowAbout] = useState(false);\n  const [openVisitNotif, setOpenVisitNotif] = React.useState(true);\n\n  // initialize Flickr hooks\n  const { refreshFeeds } = flickr;\n  const handleVisitNotifClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenVisitNotif(false);\n  };\n\n  const handleShowAboutDialog = (open) => {\n    setShowAbout(open);\n  };\n\n  const handleSearchSubmit = () => {\n    if (tags !== tagsInput) {\n      setTags(tagsInput);\n      flickr.refreshFeeds(tagsInput);\n    }\n  };\n\n  const handleMenuClick = () => {\n    setShowAbout(true);\n  };\n\n  const handleSearchInputChanged = (e) => {\n    setTagsInput(e.target.value);\n  };\n\n  // load feeds for the first time\n  useEffect(() => {\n    refreshFeeds();\n  }, [refreshFeeds]);\n\n  const handleRefreshFlickrFeeds = () => {\n    refreshFeeds(tags);\n  };\n\n  // define Appbar buttons\n  const appbarButtons = [\n    <IconButton\n      id=\"refresh-feeds\"\n      key=\"btn-refresh\"\n      onClick={() => handleRefreshFlickrFeeds()}\n      color=\"inherit\"\n    >\n      <RefreshIcon />\n    </IconButton>,\n  ];\n  return (\n    <>\n      <Snackbar\n        autoHideDuration={6000}\n        open={openVisitNotif}\n        onClose={handleVisitNotifClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n        <Alert severity=\"success\">\n          FYI, you can swipe the image\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={handleVisitNotifClose}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </Alert>\n      </Snackbar>\n      <AppBar\n        title=\"FlickrApp\"\n        buttons={appbarButtons}\n        searchInputValue={tagsInput}\n        onSearchInputChanged={handleSearchInputChanged}\n        onSearchSubmit={handleSearchSubmit}\n        onMenuClick={handleMenuClick}\n      />\n      <SimpleDialog\n        title=\"About\"\n        body=\"Made with ❤️ By Tony Song\"\n        handleClose={() => handleShowAboutDialog(false)}\n        open={showAbout}\n      />\n      <Flickr flickr={flickr} />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./components/pages/Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}